name: CI

# Trigger the workflow on push or pull request, but only for the
# master branch
on:
  pull_request:
    paths-ignore:
      - '.gitignore'
      - '.hlint.yaml'
      - 'appveyor.yml'
      - 'stack.yaml'
      - '**/CHANGELOG.md'
      - '**/FUNDING.md'
      - '**/LICENSE'
      - '**/README.md'
  push:
    paths-ignore:
      - '.gitignore'
      - '.hlint.yaml'
      - 'appveyor.yml'
      - 'stack.yaml'
      - '**/CHANGELOG.md'
      - '**/FUNDING.md'
      - '**/LICENSE'
      - '**/README.md'

jobs:
  build:
    name: >-
      ${{ matrix.versions.ghc }}; ${{ matrix.versions.lua }};
      ${{ matrix.versions.flags }}; aeson ${{ matrix.versions.aeson }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        versions:
          - ghc: '8.4.4'
            cabal: '2.4'
            lua: 'bundled'
            flags: '-export-dynamic'
            aeson: '< 2'
          - ghc: '8.6.5'
            cabal: '3.2'
            lua: 'bundled'
            flags: '-allow-unsafe-gc'
            aeson: '>= 2'
          - ghc: '8.8.4'
            cabal: '3.2'
            lua: 'bundled'
            flags: '+rely-on-shared-lpeg-library'
            aeson: '>= 2'
          - ghc: '8.10.7'
            cabal: '3.4'
            lua: 'bundled'
            flags: '-system-lua'
            aeson: '== 2.0.2.0'
          - ghc: '9.0.2'
            cabal: '3.4'
            lua: '5.4.4'
            flags: '+system-lua'
            aeson: '>= 2'
          - ghc: '9.2'
            cabal: '3.6.2'
            lua: 'bundled'
            flags: '+apicheck'
            aeson: '>= 2'
          - ghc: '9.4'
            cabal: '3.8'
            lua: 'bundled'
            flags: '+apicheck'
            aeson: '>= 2'
          - ghc: '9.6'
            cabal: '3.10'
            lua: 'bundled'
            flags: '+apicheck'
            aeson: '>= 2'
          - ghc: '9.8'
            cabal: '3.10'
            lua: 'bundled'
            flags: '+apicheck'
            aeson: '>= 2'
          - ghc: '9.10'
            cabal: '3.10'
            lua: 'bundled'
            flags: '+apicheck'
            aeson: '>= 2'

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Haskell
      uses: haskell-actions/setup@v2
      with:
        ghc-version: ${{ matrix.versions.ghc }}
        cabal-version: ${{ matrix.versions.cabal }}

    - uses: actions/cache@v3
      name: Cache ~/.cabal/store
      with:
        path: ~/.cabal/store
        key: ${{ runner.os }}-${{ matrix.versions.ghc }}-cabal

    - name: Install Lua from source
      if: matrix.versions.lua != 'bundled' && matrix.versions.lua != 'system'
      run: |
        wget http://www.lua.org/ftp/lua-${{ matrix.versions.lua }}.tar.gz
        tar -xf lua-${{ matrix.versions.lua }}.tar.gz
        cd lua-${{ matrix.versions.lua }}
        sed -i 's/^CFLAGS= -O2 -Wall/CFLAGS= -O2 -Wall -fPIC/' src/Makefile
        make linux
        make install INSTALL_TOP=${HOME}/usr
        cd ..

    - name: Configure
      run: |
        cabal v2-configure \
          --flags "${{ matrix.versions.flags }}" \
          --constraint="aeson ${{ matrix.versions.aeson }}" \
          --enable-tests \
          --extra-include-dirs=${HOME}/usr/include \
          --extra-lib-dirs=${HOME}/usr/lib \

    - name: Build all
      run: cabal v2-build all

    - name: Test all
      run: cabal v2-test all

  windows:
    name: Windows (stack)
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v4

      - name: Cache stack global package db
        id:   stack-global-package-db
        uses: actions/cache@v3
        with:
          path: 'C:\Users\runneradmin\AppData\Roaming\stack\'
          key: ${{ runner.os }}-stack-${{ hashFiles('stack.yaml') }}

      - name: Install dependencies
        run: |
          stack update
          stack test --dependencies-only --fast

      - name: Build
        shell: cmd
        run: |
          stack test --no-run-tests --fast

      - name: Test
        shell: cmd
        run: |
          stack test --fast --test-arguments="--ansi-tricks=false"
